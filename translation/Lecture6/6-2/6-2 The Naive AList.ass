[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: 6-2 The Naive AList.mp4
Video File: 6-2 The Naive AList.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 255
Active Line: 264
Video Position: 24804

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: zh - 黄色,微软雅黑,60,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: en - 白色,Yu Gothic UI,45,&H00FFFFFF,&H000000FF,&H55000000,&H63000000,-1,0,0,0,100,100,0,0,1,4,0,2,3,3,16,1
Style: 翻译人员专属 - 左下角,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,1,42,32,42,1
Style: 翻译人员专属 - 片尾（左上角）,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,42,32,42,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.00,翻译人员专属 - 片尾（左上角）,,0,0,0,, 翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:00:00.86,0:00:06.12,en - 白色,,0,0,0,,The reason that our array-based lists are going to have a much faster Get operation is as follows.
Dialogue: 0,0:00:00.86,0:00:06.12,zh - 黄色,,0,0,0,,基于数组的链表具有更快的 get 操作的原因如下
Dialogue: 0,0:00:06.74,0:00:11.70,en - 白色,,0,0,0,,On a real computer these days, no matter how big your array is, say, it's 100 million items,
Dialogue: 0,0:00:06.74,0:00:11.70,zh - 黄色,,0,0,0,,在一台真正的计算机上，不管你的数组有多大，比方说有一亿项
Dialogue: 0,0:00:12.14,0:00:16.32,en - 白色,,0,0,0,,any of those items you can get at the same amount of time, constant time, and that time is fast.
Dialogue: 0,0:00:12.14,0:00:16.32,zh - 黄色,,0,0,0,,你可以在相同的恒定时间内获取任何项，而且速度很快
Dialogue: 0,0:00:16.64,0:00:19.45,en - 白色,,0,0,0,,So even if you want item number 50 million out of a huge array,
Dialogue: 0,0:00:16.64,0:00:19.45,zh - 黄色,,0,0,0,,即使你想从一个巨大的数组中找出第5000万项
Dialogue: 0,0:00:19.94,0:00:21.22,en - 白色,,0,0,0,,it grabs it immediately.
Dialogue: 0,0:00:19.94,0:00:21.22,zh - 黄色,,0,0,0,,也会立刻得到
Dialogue: 0,0:00:22.13,0:00:25.86,en - 白色,,0,0,0,,Now, that is not 100% always, always, always true.
Dialogue: 0,0:00:22.13,0:00:25.86,zh - 黄色,,0,0,0,,这并不是百分之百正确的
Dialogue: 0,0:00:26.15,0:00:27.98,en - 白色,,0,0,0,,Occasionally, if the array gets really big,
Dialogue: 0,0:00:26.15,0:00:27.98,zh - 黄色,,0,0,0,,偶尔数组变得很大
Dialogue: 0,0:00:27.98,0:00:32.22,en - 白色,,0,0,0,,it'll start getting pushed into slower parts of your computer's memory or even a disk drive.
Dialogue: 0,0:00:27.98,0:00:32.22,zh - 黄色,,0,0,0,,它将开始被推入计算机内存中较慢的部分，甚至是磁盘驱动器
Dialogue: 0,0:00:32.50,0:00:34.20,en - 白色,,0,0,0,,So there's a little bit of a caveat here,
Dialogue: 0,0:00:32.50,0:00:34.20,zh - 黄色,,0,0,0,,所以这里有一个小小的警告
Dialogue: 0,0:00:34.47,0:00:41.39,en - 白色,,0,0,0,,but for our purposes in 61B, whenever we're running our code, we'll almost, almost always be able to assume that this is true.
Dialogue: 0,0:00:34.47,0:00:41.39,zh - 黄色,,0,0,0,,但是对于61B，每当我们运行代码，几乎总是能够假设这是真的
Dialogue: 0,0:00:42.11,0:00:43.49,en - 白色,,0,0,0,,Now, if you're curious why it is,
Dialogue: 0,0:00:42.11,0:00:43.49,zh - 黄色,,0,0,0,,如果你好奇为什么会这样
Dialogue: 0,0:00:43.49,0:00:46.72,en - 白色,,0,0,0,,in 61C, we'll discuss that in more detail,
Dialogue: 0,0:00:43.49,0:00:46.72,zh - 黄色,,0,0,0,,我们将在 61C 中更详细地讨论
Dialogue: 0,0:00:47.00,0:00:50.80,en - 白色,,0,0,0,,but it's just a nice feature of hardware and the way operating systems interact with them.
Dialogue: 0,0:00:47.00,0:00:50.80,zh - 黄色,,0,0,0,,这只是硬件和它与操作系统交互方式的一个好特点
Dialogue: 0,0:00:51.86,0:00:56.74,en - 白色,,0,0,0,,So given that fact, we can now hope to make our array-based code much faster.
Dialogue: 0,0:00:51.86,0:00:56.74,zh - 黄色,,0,0,0,,鉴于这一事实，我们现在可以希望使基于数组的代码更快
Dialogue: 0,0:00:57.55,0:00:59.39,en - 白色,,0,0,0,,So ultimately, what we're trying to do here,
Dialogue: 0,0:00:57.55,0:00:59.39,zh - 黄色,,0,0,0,,归根结底，我们在这里要做的是
Dialogue: 0,0:00:59.39,0:01:00.81,en - 白色,,0,0,0,,and what we're going to do in the next few minutes
Dialogue: 0,0:00:59.39,0:01:00.81,zh - 黄色,,0,0,0,,接下来几分钟要做的是
Dialogue: 0,0:01:01.01,0:01:04.16,en - 白色,,0,0,0,,is whereas before we had this beautiful DList
Dialogue: 0,0:01:01.01,0:01:04.16,zh - 黄色,,0,0,0,,以前我们有这个精美的 DList
Dialogue: 0,0:01:04.24,0:01:11.05,en - 白色,,0,0,0,,that had these four operations, these two memory boxes, and this recursive list definition that the sentinel node pointed at,
Dialogue: 0,0:01:04.24,0:01:11.05,zh - 黄色,,0,0,0,,它有这四个操作，这两个内存盒子，以及哨兵节点所指向的递归链表
Dialogue: 0,0:01:11.52,0:01:13.83,en - 白色,,0,0,0,,now we're going to have the same exact operations
Dialogue: 0,0:01:11.52,0:01:13.83,zh - 黄色,,0,0,0,,现在我们将进行同样的操作
Dialogue: 0,0:01:13.83,0:01:15.52,en - 白色,,0,0,0,,and the same API or interface,
Dialogue: 0,0:01:13.83,0:01:15.52,zh - 黄色,,0,0,0,,相同的 API 或接口
Dialogue: 0,0:01:15.83,0:01:19.30,en - 白色,,0,0,0,,and now we're going to come up with an alternate way that involves using arrays.
Dialogue: 0,0:01:15.83,0:01:19.30,zh - 黄色,,0,0,0,,现在我们要想出另一种方法，就是使用数组
Dialogue: 0,0:01:20.15,0:01:24.25,en - 白色,,0,0,0,,So I'm going to write some code, and you can also do this, by the way.
Dialogue: 0,0:01:20.15,0:01:24.25,zh - 黄色,,0,0,0,,我要写一些代码，顺便说一下，你也可以这样做
Dialogue: 0,0:01:24.25,0:01:31.27,en - 白色,,0,0,0,,In fact, I think the best way you could possibly do this right now is to try and work without watching me,
Dialogue: 0,0:01:24.25,0:01:31.27,zh - 黄色,,0,0,0,,实际上，我觉得你现在最好的办法就是试着不看我写
Dialogue: 0,0:01:31.58,0:01:34.24,en - 白色,,0,0,0,,and then come and watch once you've given it a chance.
Dialogue: 0,0:01:31.58,0:01:34.24,zh - 黄色,,0,0,0,,给自己一个机会后再来看
Dialogue: 0,0:01:34.70,0:01:42.62,en - 白色,,0,0,0,,So if you look inside of the lecture code repository, which is linked from the website, you will see that there is a DIY folder.
Dialogue: 0,0:01:34.70,0:01:42.62,zh - 黄色,,0,0,0,,如果你查看这个网站链接的课程代码库，会看到有一个 DIY 文件夹
Dialogue: 0,0:01:43.07,0:01:44.90,en - 白色,,0,0,0,,So if you import that into IntelliJ,
Dialogue: 0,0:01:43.07,0:01:44.90,zh - 黄色,,0,0,0,,把它导入 IntelliJ
Dialogue: 0,0:01:44.90,0:01:46.61,en - 白色,,0,0,0,,or if you do it in Sublime or whatever,
Dialogue: 0,0:01:44.90,0:01:46.61,zh - 黄色,,0,0,0,,或者 Sublime 之类的
Dialogue: 0,0:01:47.06,0:01:48.55,en - 白色,,0,0,0,,you can start working on the code.
Dialogue: 0,0:01:47.06,0:01:48.55,zh - 黄色,,0,0,0,,就可以开始编写代码了
Dialogue: 0,0:01:48.93,0:01:50.93,en - 白色,,0,0,0,,Now, I'm going to do it in a folder called Live,
Dialogue: 0,0:01:48.93,0:01:50.93,zh - 黄色,,0,0,0,,现在我选择一个名为 live 的文件夹
Dialogue: 0,0:01:50.93,0:01:55.40,en - 白色,,0,0,0,,because this is going to be code that I'll push to the website you can look at later.
Dialogue: 0,0:01:50.93,0:01:55.40,zh - 黄色,,0,0,0,,因为我会将这些代码推送到你稍后可以查看的网站
Dialogue: 0,0:01:55.40,0:01:59.69,en - 白色,,0,0,0,,So I'm going to open up live, and do the usual project import thing that you saw in project two.
Dialogue: 0,0:01:55.40,0:01:59.69,zh - 黄色,,0,0,0,,打开 live，执行在项目2中看到的常见项目导入操作
Dialogue: 0,0:02:00.79,0:02:02.11,en - 白色,,0,0,0,,So I push next a bunch of times.
Dialogue: 0,0:02:00.79,0:02:02.11,zh - 黄色,,0,0,0,,按了好几次 next
Dialogue: 0,0:02:02.79,0:02:04.15,en - 白色,,0,0,0,,The code pops up.
Dialogue: 0,0:02:02.79,0:02:04.15,zh - 黄色,,0,0,0,,代码弹出
Dialogue: 0,0:02:05.54,0:02:06.72,en - 白色,,0,0,0,,And now we're ready to go.
Dialogue: 0,0:02:05.54,0:02:06.72,zh - 黄色,,0,0,0,,准备好了
Dialogue: 0,0:02:07.55,0:02:10.15,en - 白色,,0,0,0,,So here is the AList that we're going to fill in.
Dialogue: 0,0:02:07.55,0:02:10.15,zh - 黄色,,0,0,0,,这就是我们要填写的 AList
Dialogue: 0,0:02:10.28,0:02:12.94,en - 白色,,0,0,0,,And I've already got all the methods defined to save us some time.
Dialogue: 0,0:02:10.28,0:02:12.94,zh - 黄色,,0,0,0,,我已经定义了所有的方法来节省时间
Dialogue: 0,0:02:14.27,0:02:17.12,en - 白色,,0,0,0,,So what we're going to do is in our AList constructor,
Dialogue: 0,0:02:14.27,0:02:17.12,zh - 黄色,,0,0,0,,我们要做的是在 AList 构造器中
Dialogue: 0,0:02:17.48,0:02:19.57,en - 白色,,0,0,0,,we need to decide what memory boxes to set up.
Dialogue: 0,0:02:17.48,0:02:19.57,zh - 黄色,,0,0,0,,决定要设置哪些内存盒子
Dialogue: 0,0:02:20.36,0:02:21.94,en - 白色,,0,0,0,,So I know that I have a size method.
Dialogue: 0,0:02:20.36,0:02:21.94,zh - 黄色,,0,0,0,,我知道有个 size 方法
Dialogue: 0,0:02:21.94,0:02:24.88,en - 白色,,0,0,0,,So I'm definitely going to have at least size as an instance variable,
Dialogue: 0,0:02:21.94,0:02:24.88,zh - 黄色,,0,0,0,,所以我肯定会将 size 作为实例变量
Dialogue: 0,0:02:25.36,0:02:26.89,en - 白色,,0,0,0,,and I'm also going to need some kind of array.
Dialogue: 0,0:02:25.36,0:02:26.89,zh - 黄色,,0,0,0,,还需要某种数组
Dialogue: 0,0:02:27.65,0:02:29.84,en - 白色,,0,0,0,,So I'm going to do an integer-based array,
Dialogue: 0,0:02:27.65,0:02:29.84,zh - 黄色,,0,0,0,,我要构造一个基于整数的数组
Dialogue: 0,0:02:29.84,0:02:33.15,en - 白色,,0,0,0,,because int, integer items only for now.
Dialogue: 0,0:02:29.84,0:02:33.15,zh - 黄色,,0,0,0,,因为目前只有整数项
Dialogue: 0,0:02:33.15,0:02:35.95,en - 白色,,0,0,0,,And we'll make it generic later, just because that keeps things simple.
Dialogue: 0,0:02:33.15,0:02:35.95,zh - 黄色,,0,0,0,,稍后会将其泛化，只是因为这会使事情变得简单
Dialogue: 0,0:02:36.74,0:02:38.69,en - 白色,,0,0,0,,So for now, we're going to have an array called items.
Dialogue: 0,0:02:36.74,0:02:38.69,zh - 黄色,,0,0,0,,现在我们将有一个名为 items 的数组
Dialogue: 0,0:02:39.15,0:02:40.61,en - 白色,,0,0,0,,And so when we instantiate a list,
Dialogue: 0,0:02:39.15,0:02:40.61,zh - 黄色,,0,0,0,,当实例化链表时
Dialogue: 0,0:02:40.61,0:02:42.85,en - 白色,,0,0,0,,we're going have to say items equals new something.
Dialogue: 0,0:02:40.61,0:02:42.85,zh - 黄色,,0,0,0,,写 items = new int[]
Dialogue: 0,0:02:43.48,0:02:44.96,en - 白色,,0,0,0,,I'm going to pick some arbitrary size.
Dialogue: 0,0:02:43.48,0:02:44.96,zh - 黄色,,0,0,0,,挑选任意大小
Dialogue: 0,0:02:44.96,0:02:47.41,en - 白色,,0,0,0,,I'm going to pick 100, just because.
Dialogue: 0,0:02:44.96,0:02:47.41,zh - 黄色,,0,0,0,,我选择100
Dialogue: 0,0:02:47.41,0:02:49.33,en - 白色,,0,0,0,,And then I'm going to say that the size is also zero now.
Dialogue: 0,0:02:47.41,0:02:49.33,zh - 黄色,,0,0,0,,size 现在是0
Dialogue: 0,0:02:51.11,0:02:52.32,en - 白色,,0,0,0,,Now, we move on to Add Last.
Dialogue: 0,0:02:51.11,0:02:52.32,zh - 黄色,,0,0,0,,转到 addLast
Dialogue: 0,0:02:52.32,0:02:54.13,en - 白色,,0,0,0,,It's at the basics of our program.
Dialogue: 0,0:02:52.32,0:02:54.13,zh - 黄色,,0,0,0,,这是我们程序的基础内容
Dialogue: 0,0:02:54.95,0:02:59.18,en - 白色,,0,0,0,,So to figure out array Add Last, I'm actually going to do a little example here
Dialogue: 0,0:02:54.95,0:02:59.18,zh - 黄色,,0,0,0,,为了写出 addLast，我要在这里做一个小例子
Dialogue: 0,0:02:59.18,0:03:01.36,en - 白色,,0,0,0,,where I'm going to imagine that this is items.
Dialogue: 0,0:02:59.18,0:03:01.36,zh - 黄色,,0,0,0,,我要把它想象成是项
Dialogue: 0,0:03:01.60,0:03:03.40,en - 白色,,0,0,0,,So it's originally all a bunch of zeros,
Dialogue: 0,0:03:01.60,0:03:03.40,zh - 黄色,,0,0,0,,初始化为0
Dialogue: 0,0:03:04.79,0:03:07.58,en - 白色,,0,0,0,,and size is going to be zero.
Dialogue: 0,0:03:04.79,0:03:07.58,zh - 黄色,,0,0,0,,size 也是0
Dialogue: 0,0:03:07.58,0:03:08.65,en - 白色,,0,0,0,,That's when it starts.
Dialogue: 0,0:03:07.58,0:03:08.65,zh - 黄色,,0,0,0,,这就是开始
Dialogue: 0,0:03:09.53,0:03:11.86,en - 白色,,0,0,0,,And then as I add items, they're going to fill in here.
Dialogue: 0,0:03:09.53,0:03:11.86,zh - 黄色,,0,0,0,,当我添加项目时，会填充到这里
Dialogue: 0,0:03:12.60,0:03:14.80,en - 白色,,0,0,0,,So the first item I add, maybe items is--
Dialogue: 0,0:03:12.60,0:03:14.80,zh - 黄色,,0,0,0,,所以我添加的第一项，可能是...
Dialogue: 0,0:03:14.80,0:03:17.88,en - 白色,,0,0,0,,I do Add Last six and size increases to one.
Dialogue: 0,0:03:14.80,0:03:17.88,zh - 黄色,,0,0,0,,添加6，size 加1
Dialogue: 0,0:03:18.41,0:03:21.85,en - 白色,,0,0,0,,Then someone calls Add Last on nine, and then size increases to two.
Dialogue: 0,0:03:18.41,0:03:21.85,zh - 黄色,,0,0,0,,再调用 addLast(9)，size 增加为2
Dialogue: 0,0:03:22.25,0:03:25.95,en - 白色,,0,0,0,,And then someone calls Add Last and on minus 1, and now size is three.
Dialogue: 0,0:03:22.25,0:03:25.95,zh - 黄色,,0,0,0,,再调用 addLast(-1)，现在 size 是3
Dialogue: 0,0:03:26.92,0:03:31.04,en - 白色,,0,0,0,,And up here, I guess I'll annotate each one of these spots with the address,
Dialogue: 0,0:03:26.92,0:03:31.04,zh - 黄色,,0,0,0,,在这里，我用地址注明每个地点
Dialogue: 0,0:03:31.04,0:03:33.28,en - 白色,,0,0,0,,or with the-- sorry, not the address, but the index.
Dialogue: 0,0:03:31.04,0:03:33.28,zh - 黄色,,0,0,0,,对不起，不是地址，是索引
Dialogue: 0,0:03:34.55,0:03:37.07,en - 白色,,0,0,0,,And so right here, we now have a set of items.
Dialogue: 0,0:03:34.55,0:03:37.07,zh - 黄色,,0,0,0,,所以这里有一些项
Dialogue: 0,0:03:37.73,0:03:42.70,en - 白色,,0,0,0,,And when we call Add Last, then something good should happen.
Dialogue: 0,0:03:37.73,0:03:42.70,zh - 黄色,,0,0,0,,当我们调用 addLast 时，就会有好事发生
Dialogue: 0,0:03:43.14,0:03:44.08,en - 白色,,0,0,0,,So what's that thing?
Dialogue: 0,0:03:43.14,0:03:44.08,zh - 黄色,,0,0,0,,什么好事？
Dialogue: 0,0:03:45.21,0:03:48.57,en - 白色,,0,0,0,,Well, I'm going to observe that the next item I insert,
Dialogue: 0,0:03:45.21,0:03:48.57,zh - 黄色,,0,0,0,,我观察到我插入的下一项
Dialogue: 0,0:03:48.57,0:03:50.12,en - 白色,,0,0,0,,it's going to go into position three.
Dialogue: 0,0:03:48.57,0:03:50.12,zh - 黄色,,0,0,0,,它将进入3号位置
Dialogue: 0,0:03:50.12,0:03:52.11,en - 白色,,0,0,0,,So someone types in, or does Add Last two.
Dialogue: 0,0:03:50.12,0:03:52.11,zh - 黄色,,0,0,0,,比如输入2
Dialogue: 0,0:03:52.83,0:03:53.84,en - 白色,,0,0,0,,Some of it goes there.
Dialogue: 0,0:03:52.83,0:03:53.84,zh - 黄色,,0,0,0,,就放在那里
Dialogue: 0,0:03:53.84,0:03:55.57,en - 白色,,0,0,0,,And size increases to four, and so forth.
Dialogue: 0,0:03:53.84,0:03:55.57,zh - 黄色,,0,0,0,,size 增加到4，以此类推
Dialogue: 0,0:03:55.94,0:03:58.64,en - 白色,,0,0,0,,And I observe something very interesting, which is that--
Dialogue: 0,0:03:55.94,0:03:58.64,zh - 黄色,,0,0,0,,我观察到一件非常有趣的事情，那就是...
Dialogue: 0,0:03:59.69,0:04:02.74,en - 白色,,0,0,0,,so I'll write a couple sets of-- or a set of notes here,
Dialogue: 0,0:03:59.69,0:04:02.74,zh - 黄色,,0,0,0,,我在这写一组笔记
Dialogue: 0,0:04:03.40,0:04:10.71,en - 白色,,0,0,0,,which is that when it comes to doing Add Last, the next item we want to add will go into position size.
Dialogue: 0,0:04:03.40,0:04:10.71,zh - 黄色,,0,0,0,,当调用 addLast 时，我们要添加的下一项将放到 size 位置处
Dialogue: 0,0:04:11.77,0:04:12.77,en - 白色,,0,0,0,,Where's the next one go?
Dialogue: 0,0:04:11.77,0:04:12.77,zh - 黄色,,0,0,0,,下一项去哪？
Dialogue: 0,0:04:12.77,0:04:13.84,en - 白色,,0,0,0,,Position size.
Dialogue: 0,0:04:12.77,0:04:13.84,zh - 黄色,,0,0,0,,size 位置
Dialogue: 0,0:04:14.24,0:04:17.60,en - 白色,,0,0,0,,And so what I'm doing here is by working out this little example here,
Dialogue: 0,0:04:14.24,0:04:17.60,zh - 黄色,,0,0,0,,通过这个小例子
Dialogue: 0,0:04:17.60,0:04:20.94,en - 白色,,0,0,0,,and this is the kind of thing I do when I'm thinking about how I might implement a data structure--
Dialogue: 0,0:04:17.60,0:04:20.94,zh - 黄色,,0,0,0,,这就是我在考虑如何实现数据结构时所做的事情
Dialogue: 0,0:04:21.12,0:04:22.56,en - 白色,,0,0,0,,I just work out a small example--
Dialogue: 0,0:04:21.12,0:04:22.56,zh - 黄色,,0,0,0,,我只是想出一个小例子
Dialogue: 0,0:04:22.56,0:04:24.50,en - 白色,,0,0,0,,is I'm trying to abstract the pattern.
Dialogue: 0,0:04:22.56,0:04:24.50,zh - 黄色,,0,0,0,,试着抽象这个模式
Dialogue: 0,0:04:24.50,0:04:26.32,en - 白色,,0,0,0,,I'm trying to find, ultimately,
Dialogue: 0,0:04:24.50,0:04:26.32,zh - 黄色,,0,0,0,,试图寻找，最终...
Dialogue: 0,0:04:26.80,0:04:29.82,en - 白色,,0,0,0,,what it is that makes Add Last tick, or what should make it tick.
Dialogue: 0,0:04:26.80,0:04:29.82,zh - 黄色,,0,0,0,,是什么让 addLast 得以运行
Dialogue: 0,0:04:30.08,0:04:32.80,en - 白色,,0,0,0,,And what I'm actually coming up with here is a set of invariants.
Dialogue: 0,0:04:30.08,0:04:32.80,zh - 黄色,,0,0,0,,实际上我在这里想出的是一组不变量
Dialogue: 0,0:04:33.05,0:04:36.00,en - 白色,,0,0,0,,So this is a-- and we talked about invariants in a previous lecture.
Dialogue: 0,0:04:33.05,0:04:36.00,zh - 黄色,,0,0,0,,我们在上一节课中讲过不变量
Dialogue: 0,0:04:36.00,0:04:37.84,en - 白色,,0,0,0,,They are things that are always true about our data structure.
Dialogue: 0,0:04:36.00,0:04:37.84,zh - 黄色,,0,0,0,,对于我们的数据结构，它们总是正确的
Dialogue: 0,0:04:38.34,0:04:41.95,en - 白色,,0,0,0,,And so here, Add Last tells us that the next item we're going to add will go into position size.
Dialogue: 0,0:04:38.34,0:04:41.95,zh - 黄色,,0,0,0,,在这里  addLast 告诉我们要添加的下一项将进入 size 位置
Dialogue: 0,0:04:42.62,0:04:44.44,en - 白色,,0,0,0,,What good is that, that little observation?
Dialogue: 0,0:04:42.62,0:04:44.44,zh - 黄色,,0,0,0,,这个小小的观察有什么用呢？
Dialogue: 0,0:04:44.72,0:04:46.20,en - 白色,,0,0,0,,Well, that means my code is very simple then.
Dialogue: 0,0:04:44.72,0:04:46.20,zh - 黄色,,0,0,0,,那意味着我的代码非常简单
Dialogue: 0,0:04:46.20,0:04:50.32,en - 白色,,0,0,0,,I say that Items Size equals x
Dialogue: 0,0:04:46.20,0:04:50.32,zh - 黄色,,0,0,0,,只需 items[size] = x
Dialogue: 0,0:04:50.32,0:04:55.67,en - 白色,,0,0,0,,I know that the thing I want to insert is going to go into position size, and also I need to increase size by one.
Dialogue: 0,0:04:50.32,0:04:55.67,zh - 黄色,,0,0,0,,我知道我想要插入的东西将进入 size 位置，还需增加 size
Dialogue: 0,0:04:56.13,0:05:02.49,en - 白色,,0,0,0,,So another invariant I'll mention is that when it comes to size, the number of items in the list should be size.
Dialogue: 0,0:04:56.13,0:05:02.49,zh - 黄色,,0,0,0,,我要提到的另一个不变量涉及到 size，链表中的项数应该是 size
Dialogue: 0,0:05:03.86,0:05:05.06,en - 白色,,0,0,0,,How about Get Last?
Dialogue: 0,0:05:03.86,0:05:05.06,zh - 黄色,,0,0,0,,getLast 呢？
Dialogue: 0,0:05:05.81,0:05:08.25,en - 白色,,0,0,0,,Well, if we wanted to get the last item, what is that item?
Dialogue: 0,0:05:05.81,0:05:08.25,zh - 黄色,,0,0,0,,如果我们想要最后一项，那是什么？
Dialogue: 0,0:05:08.42,0:05:09.11,en - 白色,,0,0,0,,Which one is it?
Dialogue: 0,0:05:08.42,0:05:09.11,zh - 黄色,,0,0,0,,是哪一个？
Dialogue: 0,0:05:09.11,0:05:10.00,en - 白色,,0,0,0,,This one, two.
Dialogue: 0,0:05:09.11,0:05:10.00,zh - 黄色,,0,0,0,,这个，2
Dialogue: 0,0:05:10.79,0:05:13.74,en - 白色,,0,0,0,,And so we imagine-- I don't know. I'm going to imagine if I add something else.
Dialogue: 0,0:05:10.79,0:05:13.74,zh - 黄色,,0,0,0,,假设我们再添加点其他东西
Dialogue: 0,0:05:13.74,0:05:16.86,en - 白色,,0,0,0,,I don't know, if someone adds zero, actually,
Dialogue: 0,0:05:13.74,0:05:16.86,zh - 黄色,,0,0,0,,比如有人添加0
Dialogue: 0,0:05:16.86,0:05:18.63,en - 白色,,0,0,0,,then I increase size to five.
Dialogue: 0,0:05:16.86,0:05:18.63,zh - 黄色,,0,0,0,,size 增加到5
Dialogue: 0,0:05:19.22,0:05:21.13,en - 白色,,0,0,0,,And that's going to be the last item.
Dialogue: 0,0:05:19.22,0:05:21.13,zh - 黄色,,0,0,0,,这将是最后一项
Dialogue: 0,0:05:21.13,0:05:23.18,en - 白色,,0,0,0,,So I can imagine maybe I make a little note here.
Dialogue: 0,0:05:21.13,0:05:23.18,zh - 黄色,,0,0,0,,也许我可以在这里做个记号
Dialogue: 0,0:05:23.36,0:05:23.99,en - 白色,,0,0,0,,Nah, I don't know.
Dialogue: 0,0:05:23.36,0:05:23.99,zh - 黄色,,0,0,0,,不
Dialogue: 0,0:05:23.99,0:05:25.12,en - 白色,,0,0,0,,I don't like that notation.
Dialogue: 0,0:05:23.99,0:05:25.12,zh - 黄色,,0,0,0,,我不喜欢这个记号
Dialogue: 0,0:05:25.86,0:05:27.60,en - 白色,,0,0,0,,So this is the item I want to return.
Dialogue: 0,0:05:25.86,0:05:27.60,zh - 黄色,,0,0,0,,这就是我要返回的东西
Dialogue: 0,0:05:28.07,0:05:30.02,en - 白色,,0,0,0,,And so when it comes to invariants,
Dialogue: 0,0:05:28.07,0:05:30.02,zh - 黄色,,0,0,0,,所以当涉及到不变量时
Dialogue: 0,0:05:30.02,0:05:31.26,en - 白色,,0,0,0,,we can say Get Last.
Dialogue: 0,0:05:30.02,0:05:31.26,zh - 黄色,,0,0,0,,我们可以说 getLast
Dialogue: 0,0:05:31.97,0:05:38.64,en - 白色,,0,0,0,,The item we want to return is in position size minus one.
Dialogue: 0,0:05:31.97,0:05:38.64,zh - 黄色,,0,0,0,,我们要返回的项的位置是 size-1
Dialogue: 0,0:05:40.16,0:05:41.72,en - 白色,,0,0,0,,Oh, spell check. That's nice.
Dialogue: 0,0:05:40.16,0:05:41.72,zh - 黄色,,0,0,0,,拼写错了
Dialogue: 0,0:05:45.29,0:05:46.67,en - 白色,,0,0,0,,And so when it comes to Get Last,
Dialogue: 0,0:05:45.29,0:05:46.67,zh - 黄色,,0,0,0,,当谈论 getLast 时
Dialogue: 0,0:05:46.67,0:05:49.85,en - 白色,,0,0,0,,we can just write return items size minus one.
Dialogue: 0,0:05:46.67,0:05:49.85,zh - 黄色,,0,0,0,,只需写 return items[size-1]
Dialogue: 0,0:05:50.59,0:05:53.22,en - 白色,,0,0,0,,Having this invariant up here makes the code very easy.
Dialogue: 0,0:05:50.59,0:05:53.22,zh - 黄色,,0,0,0,,这个不变量使得代码非常简单
Dialogue: 0,0:05:54.65,0:05:57.09,en - 白色,,0,0,0,,When it comes to Get, that one's super easy.
Dialogue: 0,0:05:54.65,0:05:57.09,zh - 黄色,,0,0,0,,get 方法超级简单
Dialogue: 0,0:05:57.09,0:05:58.47,en - 白色,,0,0,0,,We just need to return the item.
Dialogue: 0,0:05:57.09,0:05:58.47,zh - 黄色,,0,0,0,,只需要 return items
Dialogue: 0,0:05:58.66,0:06:00.35,en - 白色,,0,0,0,,And when it comes to writing the size method,
Dialogue: 0,0:05:58.66,0:06:00.35,zh - 黄色,,0,0,0,,编写 size 方法时
Dialogue: 0,0:06:00.35,0:06:01.99,en - 白色,,0,0,0,,we just return the size variable.
Dialogue: 0,0:06:00.35,0:06:01.99,zh - 黄色,,0,0,0,,只需返回 size 变量
Dialogue: 0,0:06:02.91,0:06:04.28,en - 白色,,0,0,0,,So we're not going to go through this code
Dialogue: 0,0:06:02.91,0:06:04.28,zh - 黄色,,0,0,0,,我们不会再过一遍这段代码
Dialogue: 0,0:06:04.28,0:06:06.10,en - 白色,,0,0,0,,and exhaustively test it or anything.
Dialogue: 0,0:06:04.28,0:06:06.10,zh - 黄色,,0,0,0,,并对其进行详尽的测试
Dialogue: 0,0:06:06.10,0:06:09.52,en - 白色,,0,0,0,,That's the construction I came up with, and it should be fine.
Dialogue: 0,0:06:06.10,0:06:09.52,zh - 黄色,,0,0,0,,这是我想出的结构，应该没问题
Dialogue: 0,0:06:10.76,0:06:13.40,en - 白色,,0,0,0,,Now, actually, I provided a test method here,
Dialogue: 0,0:06:10.76,0:06:13.40,zh - 黄色,,0,0,0,,实际上，我在这提供了 Test 方法
Dialogue: 0,0:06:13.40,0:06:17.20,en - 白色,,0,0,0,,or some test code you can actually run on your own implementation, but I won't do it right now.
Dialogue: 0,0:06:13.40,0:06:17.20,zh - 黄色,,0,0,0,,你可以在自己的实现上运行测试代码，但我现在不会这样做
Dialogue: 0,0:06:19.82,0:06:21.42,en - 白色,,0,0,0,,So let's look at the code I came up with.
Dialogue: 0,0:06:19.82,0:06:21.42,zh - 黄色,,0,0,0,,让我们来看看我想出的代码
Dialogue: 0,0:06:22.07,0:06:27.44,en - 白色,,0,0,0,,The AList class here, well, notice it's very similar to what I just came up with on the fly.
Dialogue: 0,0:06:22.07,0:06:27.44,zh - 黄色,,0,0,0,,这里的 AList 类，注意它和我刚才临时想出来的非常相似
Dialogue: 0,0:06:27.78,0:06:29.01,en - 白色,,0,0,0,,There are a couple of differences.
Dialogue: 0,0:06:27.78,0:06:29.01,zh - 黄色,,0,0,0,,有几个不同之处
Dialogue: 0,0:06:29.24,0:06:30.72,en - 白色,,0,0,0,,One is this private keyword.
Dialogue: 0,0:06:29.24,0:06:30.72,zh - 黄色,,0,0,0,,一个是 private 关键字
Dialogue: 0,0:06:31.03,0:06:38.13,en - 白色,,0,0,0,,So you'll notice in my code, I didn't actually put a specifier here, and that's a common mistake whenever a programmer is new.
Dialogue: 0,0:06:31.03,0:06:38.13,zh - 黄色,,0,0,0,,你会注意到在我的代码中\N我实际上没有在这里放一个标识符，这是程序员新手经常犯的错误
Dialogue: 0,0:06:38.33,0:06:41.36,en - 白色,,0,0,0,,That actually, you might wonder, what does it mean to not have any keyword.
Dialogue: 0,0:06:38.33,0:06:41.36,zh - 黄色,,0,0,0,,你可能会想，没有任何关键字意味着什么
Dialogue: 0,0:06:41.36,0:06:42.86,en - 白色,,0,0,0,,We'll talk about that in a couple of weeks.
Dialogue: 0,0:06:41.36,0:06:42.86,zh - 黄色,,0,0,0,,我们将在几周后讨论这个问题
Dialogue: 0,0:06:43.35,0:06:46.18,en - 白色,,0,0,0,,But what we-- instead, it's better practice to put private,
Dialogue: 0,0:06:43.35,0:06:46.18,zh - 黄色,,0,0,0,,但是现在更好的做法是放置 private
Dialogue: 0,0:06:46.46,0:06:49.03,en - 白色,,0,0,0,,because that ensures that no outsider is going to edit our code.
Dialogue: 0,0:06:46.46,0:06:49.03,zh - 黄色,,0,0,0,,这样可以确保没有外人编辑我们的代码
Dialogue: 0,0:06:49.46,0:06:50.96,en - 白色,,0,0,0,,So that's something we might have forgotten.
Dialogue: 0,0:06:49.46,0:06:50.96,zh - 黄色,,0,0,0,,这是我们易忘的东西
Dialogue: 0,0:06:51.84,0:06:53.39,en - 白色,,0,0,0,,Another thing I did here in this code
Dialogue: 0,0:06:51.84,0:06:53.39,zh - 黄色,,0,0,0,,我在这段代码中做的另一件事
Dialogue: 0,0:06:53.39,0:06:56.06,en - 白色,,0,0,0,,is you'll notice that the constructor is all on one line.
Dialogue: 0,0:06:53.39,0:06:56.06,zh - 黄色,,0,0,0,,就是构造函数都写在一行内
Dialogue: 0,0:06:56.26,0:06:58.48,en - 白色,,0,0,0,,And I have a semicolon separating these two statements.
Dialogue: 0,0:06:56.26,0:06:58.48,zh - 黄色,,0,0,0,,我用分号分隔这两个语句
Dialogue: 0,0:06:58.95,0:07:00.95,en - 白色,,0,0,0,,So this is better style.
Dialogue: 0,0:06:58.95,0:07:00.95,zh - 黄色,,0,0,0,,这是更好的风格
Dialogue: 0,0:07:00.95,0:07:02.78,en - 白色,,0,0,0,,You might wonder why I did this here.
Dialogue: 0,0:07:00.95,0:07:02.78,zh - 黄色,,0,0,0,,为什么要在这里这么做
Dialogue: 0,0:07:02.78,0:07:05.71,en - 白色,,0,0,0,,The hint for you is this is a lecture on the internet.
Dialogue: 0,0:07:02.78,0:07:05.71,zh - 黄色,,0,0,0,,提示你，这是一场互联网上的讲座
Dialogue: 0,0:07:06.57,0:07:09.21,en - 白色,,0,0,0,,And the answer is simply that I don't have the vertical space.
Dialogue: 0,0:07:06.57,0:07:09.21,zh - 黄色,,0,0,0,,答案很简单，垂直空间不够了
Dialogue: 0,0:07:09.62,0:07:13.01,en - 白色,,0,0,0,,So I'd say this is bad style, even though it is actually possible in Java.
Dialogue: 0,0:07:09.62,0:07:13.01,zh - 黄色,,0,0,0,,这是一种糟糕的风格，尽管在 Java 中可行
Dialogue: 0,0:07:14.01,0:07:14.81,en - 白色,,0,0,0,,So that's the code.
Dialogue: 0,0:07:14.01,0:07:14.81,zh - 黄色,,0,0,0,,这就是代码
Dialogue: 0,0:07:15.66,0:07:19.55,en - 白色,,0,0,0,,Now, note also I've written out the invariants that we put in our code before.
Dialogue: 0,0:07:15.66,0:07:19.55,zh - 黄色,,0,0,0,,现在还要注意，我已经写出了之前在代码中放入的不变量
Dialogue: 0,0:07:19.55,0:07:22.08,en - 白色,,0,0,0,,And these invariants are really nice to have.
Dialogue: 0,0:07:19.55,0:07:22.08,zh - 黄色,,0,0,0,,这些不变量真的很不错
Dialogue: 0,0:07:22.56,0:07:26.28,en - 白色,,0,0,0,,Now, when you're writing code, chances are you're probably not going to sit there and write out all your invariants,
Dialogue: 0,0:07:22.56,0:07:26.28,zh - 黄色,,0,0,0,,当你写代码时，很可能不会坐在那里写出所有的不变量
Dialogue: 0,0:07:26.48,0:07:28.00,en - 白色,,0,0,0,,but maybe that's something you like to do.
Dialogue: 0,0:07:26.48,0:07:28.00,zh - 黄色,,0,0,0,,但也许这是你喜欢做的事情
Dialogue: 0,0:07:28.25,0:07:30.75,en - 白色,,0,0,0,,It's one of those things that's kind of like safety equipment,
Dialogue: 0,0:07:28.25,0:07:30.75,zh - 黄色,,0,0,0,,这种东西有点像安全设备
Dialogue: 0,0:07:31.36,0:07:34.69,en - 白色,,0,0,0,,where if you have the invariants actually written out,
Dialogue: 0,0:07:31.36,0:07:34.69,zh - 黄色,,0,0,0,,如果你把不变量写出来
Dialogue: 0,0:07:34.85,0:07:36.26,en - 白色,,0,0,0,,you can consult them as you're going.
Dialogue: 0,0:07:34.85,0:07:36.26,zh - 黄色,,0,0,0,,你可以边走边看
Dialogue: 0,0:07:36.58,0:07:38.72,en - 白色,,0,0,0,,It kind of just depends on the style of programmer that you are.
Dialogue: 0,0:07:36.58,0:07:38.72,zh - 黄色,,0,0,0,,这在某种程度上取决于你是什么样的程序员
Dialogue: 0,0:07:38.72,0:07:41.06,en - 白色,,0,0,0,,So some programmers really actually like having invariants.
Dialogue: 0,0:07:38.72,0:07:41.06,zh - 黄色,,0,0,0,,一些程序员非常喜欢拥有不变量
Dialogue: 0,0:07:42.00,0:07:44.30,en - 白色,,0,0,0,,And actually, there's a whole field of computer science
Dialogue: 0,0:07:42.00,0:07:44.30,zh - 黄色,,0,0,0,,实际上，有一个完整的计算机科学领域
Dialogue: 0,0:07:44.30,0:07:47.43,en - 白色,,0,0,0,,where you try and prove that your programs are actually mathematically correct,
Dialogue: 0,0:07:44.30,0:07:47.43,zh - 黄色,,0,0,0,,你需要试着证明你的程序在数学上是正确的
Dialogue: 0,0:07:47.71,0:07:49.78,en - 白色,,0,0,0,,and invariants are a tool you can use to do that.
Dialogue: 0,0:07:47.71,0:07:49.78,zh - 黄色,,0,0,0,,不变量是实现这一点的工具
Dialogue: 0,0:07:50.42,0:07:52.41,en - 白色,,0,0,0,,Now, maybe you prefer to just having--
Dialogue: 0,0:07:50.42,0:07:52.41,zh - 黄色,,0,0,0,,也许你更喜欢...
Dialogue: 0,0:07:52.41,0:07:55.71,en - 白色,,0,0,0,,sorry. You might just prefer to have little drawn out examples like that.
Dialogue: 0,0:07:52.41,0:07:55.71,zh - 黄色,,0,0,0,,你可能更喜欢这样的小例子
Dialogue: 0,0:07:55.97,0:07:57.09,en - 白色,,0,0,0,,And that could be fine, too.
Dialogue: 0,0:07:55.97,0:07:57.09,zh - 黄色,,0,0,0,,这也很好
Dialogue: 0,0:07:57.59,0:08:01.90,en - 白色,,0,0,0,,But invariants is maybe the most mathy way of thinking about programming.
Dialogue: 0,0:07:57.59,0:08:01.90,zh - 黄色,,0,0,0,,但不变量也许是对编程最数学化的思考方式
Dialogue: 0,0:08:02.92,0:08:04.51,en - 白色,,0,0,0,,So that's it for our basic operations.
Dialogue: 0,0:08:02.92,0:08:04.51,zh - 黄色,,0,0,0,,这就是我们的基础操作
Dialogue: 0,0:08:04.28,0:08:07.28,翻译人员专属 - 片尾（左上角）,,0,0,0,, 翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:08:04.51,0:08:07.28,en - 白色,,0,0,0,,We'll move onto the lead operations next.
Dialogue: 0,0:08:04.51,0:08:07.28,zh - 黄色,,0,0,0,,接下来将讨论高级操作
