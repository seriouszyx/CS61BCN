[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: 6-10 Generic ALists.mp4
Video File: 6-10 Generic ALists.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 165
Active Line: 176
Video Position: 16203

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: zh - 黄色,微软雅黑,60,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: en - 白色,Yu Gothic UI,45,&H00FFFFFF,&H000000FF,&H55000000,&H63000000,-1,0,0,0,100,100,0,0,1,4,0,2,3,3,16,1
Style: 翻译人员专属 - 左下角,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,1,42,32,42,1
Style: 翻译人员专属 - 片尾（左上角）,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,42,32,42,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.00,翻译人员专属 - 片尾（左上角）,,0,0,0,, 翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:00:00.68,0:00:03.28,en - 白色,,0,0,0,,The last thing we're going to change about our ArrayList is to make it generic.
Dialogue: 0,0:00:00.68,0:00:03.28,zh - 黄色,,0,0,0,,我们要改变 ArrayList 的最后一件事是使它成为泛型
Dialogue: 0,0:00:03.61,0:00:04.75,en - 白色,,0,0,0,,Now there wouldn't be anything to do,
Dialogue: 0,0:00:03.61,0:00:04.75,zh - 黄色,,0,0,0,,现在没什么可做的了
Dialogue: 0,0:00:04.75,0:00:08.35,en - 白色,,0,0,0,,I wouldn't even make this video if it weren't for one little syntactical quirk of Java.
Dialogue: 0,0:00:04.75,0:00:08.35,zh - 黄色,,0,0,0,,如果不是因为 Java 语法的小怪癖，我甚至不会做这个视频
Dialogue: 0,0:00:08.35,0:00:09.38,en - 白色,,0,0,0,,So let's see it pop up.
Dialogue: 0,0:00:08.35,0:00:09.38,zh - 黄色,,0,0,0,,来看代码
Dialogue: 0,0:00:10.15,0:00:14.56,en - 白色,,0,0,0,,So I need to, in order to make my ArrayList generic, I, of course, need to pick a type parameter name.
Dialogue: 0,0:00:10.15,0:00:14.56,zh - 黄色,,0,0,0,,为了使 ArrayList 成为泛型，我需要选择一个参数类型的名称
Dialogue: 0,0:00:15.10,0:00:19.05,en - 白色,,0,0,0,,I could pick Blorp or whatever, but I'm going to pick item, which is a little more common.
Dialogue: 0,0:00:15.10,0:00:19.05,zh - 黄色,,0,0,0,,我可以选择 Blorp 什么的，但倾向于更常见的 Item
Dialogue: 0,0:00:19.39,0:00:21.39,en - 白色,,0,0,0,,Now there's nothing special about putting item here.
Dialogue: 0,0:00:19.39,0:00:21.39,zh - 黄色,,0,0,0,,把 Item 放在这没什么特别
Dialogue: 0,0:00:21.92,0:00:23.74,en - 白色,,0,0,0,,It's not a special keyword in Java.
Dialogue: 0,0:00:21.92,0:00:23.74,zh - 黄色,,0,0,0,,它不是 Java 特殊的关键字
Dialogue: 0,0:00:23.96,0:00:25.56,en - 白色,,0,0,0,,It just happens to be the one I'm going to use.
Dialogue: 0,0:00:23.96,0:00:25.56,zh - 黄色,,0,0,0,,恰好是我要用的
Dialogue: 0,0:00:26.28,0:00:30.73,en - 白色,,0,0,0,,Now I'm going to go through and I'm going to say instead of it being an int array, it's going to be an item array.
Dialogue: 0,0:00:26.28,0:00:30.73,zh - 黄色,,0,0,0,,再说一遍，它不是一个整型数组，而是一个 Item 数组
Dialogue: 0,0:00:31.88,0:00:33.55,en - 白色,,0,0,0,,AList, instead of being a new int array,
Dialogue: 0,0:00:31.88,0:00:33.55,zh - 黄色,,0,0,0,,AList 不再是整型数组
Dialogue: 0,0:00:33.55,0:00:36.08,en - 白色,,0,0,0,,it will say new item, 100 let's say.
Dialogue: 0,0:00:33.55,0:00:36.08,zh - 黄色,,0,0,0,,而是 Item，比方说100
Dialogue: 0,0:00:37.00,0:00:39.29,en - 白色,,0,0,0,,As we move our way forward, when we resize
Dialogue: 0,0:00:37.00,0:00:39.29,zh - 黄色,,0,0,0,,前进道路上，当 resize 时...
Dialogue: 0,0:00:40.96,0:00:42.13,en - 白色,,0,0,0,,what else do we need to do?
Dialogue: 0,0:00:40.96,0:00:42.13,zh - 黄色,,0,0,0,,还需要做什么呢？
Dialogue: 0,0:00:42.13,0:00:43.45,en - 白色,,0,0,0,,This should be an item array.
Dialogue: 0,0:00:42.13,0:00:43.45,zh - 黄色,,0,0,0,,这应该是 Item 数组
Dialogue: 0,0:00:44.83,0:00:49.73,en - 白色,,0,0,0,,Continuing to move forward, everything here looks good, except addLast needs to take item.
Dialogue: 0,0:00:44.83,0:00:49.73,zh - 黄色,,0,0,0,,继续往前，一切很好，addLast 需要 Item
Dialogue: 0,0:00:50.53,0:00:55.73,en - 白色,,0,0,0,,getLast returns an item, get returns an item,
Dialogue: 0,0:00:50.53,0:00:55.73,zh - 黄色,,0,0,0,,getLast 返回 Item，get 返回 Item
Dialogue: 0,0:00:57.31,0:00:59.97,en - 白色,,0,0,0,,and removeLast will return an item as well.
Dialogue: 0,0:00:57.31,0:00:59.97,zh - 黄色,,0,0,0,,removeLast 也将返回 Item
Dialogue: 0,0:01:01.39,0:01:03.51,en - 白色,,0,0,0,,So we'll notice there's actually a couple of syntax errors.
Dialogue: 0,0:01:01.39,0:01:03.51,zh - 黄色,,0,0,0,,我们会注意到有几个语法错误
Dialogue: 0,0:01:03.85,0:01:05.34,en - 白色,,0,0,0,,And we see that Java is complaining.
Dialogue: 0,0:01:03.85,0:01:05.34,zh - 黄色,,0,0,0,,Java 在抱怨
Dialogue: 0,0:01:05.34,0:01:10.37,en - 白色,,0,0,0,,In fact, if we hover over, we see item cannot be instantiated directly.
Dialogue: 0,0:01:05.34,0:01:10.37,zh - 黄色,,0,0,0,,将鼠标悬停在上面，我们会看到 Item 不能直接实例化
Dialogue: 0,0:01:11.05,0:01:12.86,en - 白色,,0,0,0,,Item cannot be instantiated directly.
Dialogue: 0,0:01:11.05,0:01:12.86,zh - 黄色,,0,0,0,,Item 不能直接实例化
Dialogue: 0,0:01:13.39,0:01:15.99,en - 白色,,0,0,0,,Required item found A. OK, well that one we can change.
Dialogue: 0,0:01:13.39,0:01:15.99,zh - 黄色,,0,0,0,,需要 Item 发现 a，换掉
Dialogue: 0,0:01:17.35,0:01:18.31,en - 白色,,0,0,0,,So what does this mean?
Dialogue: 0,0:01:17.35,0:01:18.31,zh - 黄色,,0,0,0,,这意味着什么？
Dialogue: 0,0:01:18.31,0:01:20.59,en - 白色,,0,0,0,,Item cannot be instantiated directly.
Dialogue: 0,0:01:18.31,0:01:20.59,zh - 黄色,,0,0,0,,Item 不能直接实例化
Dialogue: 0,0:01:21.14,0:01:22.99,en - 白色,,0,0,0,,There's an annoying feature of Java,
Dialogue: 0,0:01:21.14,0:01:22.99,zh - 黄色,,0,0,0,,Java 有一个恼人的特性
Dialogue: 0,0:01:22.99,0:01:25.64,en - 白色,,0,0,0,,which is that generic arrays are not allowed.
Dialogue: 0,0:01:22.99,0:01:25.64,zh - 黄色,,0,0,0,,不允许使用泛型数组
Dialogue: 0,0:01:25.64,0:01:27.06,en - 白色,,0,0,0,,You simply cannot do them.
Dialogue: 0,0:01:25.64,0:01:27.06,zh - 黄色,,0,0,0,,你根本不能这样做
Dialogue: 0,0:01:27.68,0:01:29.08,en - 白色,,0,0,0,,So instead, you have to do--
Dialogue: 0,0:01:27.68,0:01:29.08,zh - 黄色,,0,0,0,,取而代之，你需要...
Dialogue: 0,0:01:29.08,0:01:30.58,en - 白色,,0,0,0,,and just trust me for now--
Dialogue: 0,0:01:29.08,0:01:30.58,zh - 黄色,,0,0,0,,现在请相信我...
Dialogue: 0,0:01:30.58,0:01:31.85,en - 白色,,0,0,0,,this very strange thing.
Dialogue: 0,0:01:30.58,0:01:31.85,zh - 黄色,,0,0,0,,这很奇怪
Dialogue: 0,0:01:32.27,0:01:34.82,en - 白色,,0,0,0,,Instead of saying new item, we say new object.
Dialogue: 0,0:01:32.27,0:01:34.82,zh - 黄色,,0,0,0,,不能 new Item，而是 new Object
Dialogue: 0,0:01:36.10,0:01:39.70,en - 白色,,0,0,0,,Now when we do new object, it now says, required item, but found object.
Dialogue: 0,0:01:36.10,0:01:39.70,zh - 黄色,,0,0,0,,new Object 时，它会显示“需要 Item，但发现 Object”
Dialogue: 0,0:01:40.15,0:01:41.04,en - 白色,,0,0,0,,No problem.
Dialogue: 0,0:01:40.15,0:01:41.04,zh - 黄色,,0,0,0,,没问题
Dialogue: 0,0:01:41.04,0:01:46.95,en - 白色,,0,0,0,,I'll instead do this other mysterious thing, where I'm going to type the word item here, put the braces, and now things will work.
Dialogue: 0,0:01:41.04,0:01:46.95,zh - 黄色,,0,0,0,,我会做另一件神秘的事情，在这里输入 Item[]，现在就可以了
Dialogue: 0,0:01:47.44,0:01:48.50,en - 白色,,0,0,0,,This is a cast.
Dialogue: 0,0:01:47.44,0:01:48.50,zh - 黄色,,0,0,0,,这是转换
Dialogue: 0,0:01:48.50,0:01:50.13,en - 白色,,0,0,0,,We'll learn about casts later.
Dialogue: 0,0:01:48.50,0:01:50.13,zh - 黄色,,0,0,0,,稍后会学到
Dialogue: 0,0:01:50.68,0:01:52.46,en - 白色,,0,0,0,,But for now that's just what we need to know.
Dialogue: 0,0:01:50.68,0:01:52.46,zh - 黄色,,0,0,0,,这目前正是我们需要的
Dialogue: 0,0:01:53.02,0:01:56.88,en - 白色,,0,0,0,,This is just a side effect of the strange way that generics were created in Java.
Dialogue: 0,0:01:53.02,0:01:56.88,zh - 黄色,,0,0,0,,这只是 Java 中创建泛型奇怪方式的一个副作用
Dialogue: 0,0:01:56.88,0:02:01.59,en - 白色,,0,0,0,,And so effectively what it boils down to is instead of saying new item yada yada.
Dialogue: 0,0:01:56.88,0:02:01.59,zh - 黄色,,0,0,0,,归根结底，就是不能 new Item 什么的
Dialogue: 0,0:02:01.87,0:02:07.54,en - 白色,,0,0,0,,In Java, we have to do parentheses, item, braces, space, new object.
Dialogue: 0,0:02:01.87,0:02:07.54,zh - 黄色,,0,0,0,,Java 中必须 (Item[]) new Object
Dialogue: 0,0:02:08.59,0:02:13.64,en - 白色,,0,0,0,,And that's only because Java specifically does not allow you to create arrays of generic objects.
Dialogue: 0,0:02:08.59,0:02:13.64,zh - 黄色,,0,0,0,,这只是因为 Java 明确不允许创建泛型对象的数组
Dialogue: 0,0:02:14.32,0:02:16.15,en - 白色,,0,0,0,,So at this point our code should compile,
Dialogue: 0,0:02:14.32,0:02:16.15,zh - 黄色,,0,0,0,,现在代码可以编译了
Dialogue: 0,0:02:16.15,0:02:18.25,en - 白色,,0,0,0,,except that we should have made this into an item as well.
Dialogue: 0,0:02:16.15,0:02:18.25,zh - 黄色,,0,0,0,,应该把这个改成 Item
Dialogue: 0,0:02:18.97,0:02:20.02,en - 白色,,0,0,0,,So now we see everything.
Dialogue: 0,0:02:18.97,0:02:20.02,zh - 黄色,,0,0,0,,全都看看
Dialogue: 0,0:02:20.02,0:02:21.70,en - 白色,,0,0,0,,We see no compilation errors.
Dialogue: 0,0:02:20.02,0:02:21.70,zh - 黄色,,0,0,0,,没有编译错误
Dialogue: 0,0:02:21.70,0:02:24.59,en - 白色,,0,0,0,,And in the real world again, we'd test, but not in this lecture.
Dialogue: 0,0:02:21.70,0:02:24.59,zh - 黄色,,0,0,0,,现实中会进行测试，但课上就不了
Dialogue: 0,0:02:24.86,0:02:26.95,en - 白色,,0,0,0,,And so we end up with a nice ArrayList.
Dialogue: 0,0:02:24.86,0:02:26.95,zh - 黄色,,0,0,0,,最终得到了一个很好的 ArrayList
Dialogue: 0,0:02:28.51,0:02:33.85,en - 白色,,0,0,0,,So this on the left is our ArrayList code that holds only integers.
Dialogue: 0,0:02:28.51,0:02:33.85,zh - 黄色,,0,0,0,,左边的 ArrayList 代码只保存整型
Dialogue: 0,0:02:33.85,0:02:36.79,en - 白色,,0,0,0,,And this right here is our ArrayList that holds arbitrary things.
Dialogue: 0,0:02:33.85,0:02:36.79,zh - 黄色,,0,0,0,,右边的包含任何东西
Dialogue: 0,0:02:37.15,0:02:38.66,en - 白色,,0,0,0,,I used Glorp on the slides.
Dialogue: 0,0:02:37.15,0:02:38.66,zh - 黄色,,0,0,0,,我在幻灯片用了 Glorp
Dialogue: 0,0:02:38.66,0:02:40.03,en - 白色,,0,0,0,,Or used items before.
Dialogue: 0,0:02:38.66,0:02:40.03,zh - 黄色,,0,0,0,,Item 也行
Dialogue: 0,0:02:40.03,0:02:42.12,en - 白色,,0,0,0,,And the only really interesting thing is this.
Dialogue: 0,0:02:40.03,0:02:42.12,zh - 黄色,,0,0,0,,唯一有趣的是这个
Dialogue: 0,0:02:43.21,0:02:46.93,en - 白色,,0,0,0,,There's one more interesting detail, which is that--
Dialogue: 0,0:02:43.21,0:02:46.93,zh - 黄色,,0,0,0,,还有一个有趣的细节
Dialogue: 0,0:02:46.93,0:02:48.84,en - 白色,,0,0,0,,well, actually maybe I should summarize real quick.
Dialogue: 0,0:02:46.93,0:02:48.84,zh - 黄色,,0,0,0,,实际上也许我应该快速总结一下
Dialogue: 0,0:02:49.57,0:02:54.82,en - 白色,,0,0,0,,So in a sense, our issue is that when we create an array of references to Glorps or items or whatever,
Dialogue: 0,0:02:49.57,0:02:54.82,zh - 黄色,,0,0,0,,在某种意义上，问题是，当我们创建一个 Glorp 或 Item 之类的数组时
Dialogue: 0,0:02:55.12,0:03:00.76,en - 白色,,0,0,0,,instead of saying new Glorp, we say Glorp, braces, new object, however many items.
Dialogue: 0,0:02:55.12,0:03:00.76,zh - 黄色,,0,0,0,,不能 new Glorp，而是 (Glorp[]) new object[cap]
Dialogue: 0,0:03:01.36,0:03:03.95,en - 白色,,0,0,0,,This will, by the way if you use the command line compilation,
Dialogue: 0,0:03:01.36,0:03:03.95,zh - 黄色,,0,0,0,,顺便说一下，如果使用命令行编译
Dialogue: 0,0:03:03.95,0:03:05.88,en - 白色,,0,0,0,,it will give you a compiler warning.
Dialogue: 0,0:03:03.95,0:03:05.88,zh - 黄色,,0,0,0,,会有一个编译器警告
Dialogue: 0,0:03:05.88,0:03:07.46,en - 白色,,0,0,0,,And if that happens, you've just gotta ignore it.
Dialogue: 0,0:03:05.88,0:03:07.46,zh - 黄色,,0,0,0,,如果发生，你只能忽略它
Dialogue: 0,0:03:08.23,0:03:11.79,en - 白色,,0,0,0,,It's the thing we have to deal with, because of the funny way that Java was created.
Dialogue: 0,0:03:08.23,0:03:11.79,zh - 黄色,,0,0,0,,这是必须处理的事情，因为 Java 的创建方式很有趣
Dialogue: 0,0:03:12.19,0:03:14.04,en - 白色,,0,0,0,,If you did actually do new Glorp,
Dialogue: 0,0:03:12.19,0:03:14.04,zh - 黄色,,0,0,0,,如果你真的 new Glorp
Dialogue: 0,0:03:14.41,0:03:16.66,en - 白色,,0,0,0,,you will get if you use the command line compilation,
Dialogue: 0,0:03:14.41,0:03:16.66,zh - 黄色,,0,0,0,,使用命令行编译将得到
Dialogue: 0,0:03:16.66,0:03:18.09,en - 白色,,0,0,0,,generic array creation error.
Dialogue: 0,0:03:16.66,0:03:18.09,zh - 黄色,,0,0,0,,泛型数组创建错误
Dialogue: 0,0:03:18.31,0:03:20.56,en - 白色,,0,0,0,,And we'll talk about these funny language issues later.
Dialogue: 0,0:03:18.31,0:03:20.56,zh - 黄色,,0,0,0,,以后会讨论这些有趣的语言问题
Dialogue: 0,0:03:20.56,0:03:22.57,en - 白色,,0,0,0,,But for now, they're just not that interesting.
Dialogue: 0,0:03:20.56,0:03:22.57,zh - 黄色,,0,0,0,,目前而言，它们并不那么有趣
Dialogue: 0,0:03:22.57,0:03:24.35,en - 白色,,0,0,0,,I want to focus on the interesting stuff.
Dialogue: 0,0:03:22.57,0:03:24.35,zh - 黄色,,0,0,0,,要关注有趣的东西
Dialogue: 0,0:03:24.35,0:03:26.02,en - 白色,,0,0,0,,And we'll deal java minutia in the future.
Dialogue: 0,0:03:24.35,0:03:26.02,zh - 黄色,,0,0,0,,我们将在未来处理 Java 细节
Dialogue: 0,0:03:27.70,0:03:31.66,en - 白色,,0,0,0,,Now there's one other thing we do want to change about our code that's a little more subtle.
Dialogue: 0,0:03:27.70,0:03:31.66,zh - 黄色,,0,0,0,,我们确实要改变代码的话，还有一件更不容易察觉的事
Dialogue: 0,0:03:31.66,0:03:33.79,en - 白色,,0,0,0,,So what we had before will work correctly.
Dialogue: 0,0:03:31.66,0:03:33.79,zh - 黄色,,0,0,0,,之前拥有的将会正常工作
Dialogue: 0,0:03:33.79,0:03:36.26,en - 白色,,0,0,0,,But it does something called loitering, which I don't like.
Dialogue: 0,0:03:33.79,0:03:36.26,zh - 黄色,,0,0,0,,但它做的一些事称为“闲逛”，我不喜欢
Dialogue: 0,0:03:37.03,0:03:41.72,en - 白色,,0,0,0,,So unlike integer-based ALists, remember whenever we're doing the allegory of the cave,
Dialogue: 0,0:03:37.03,0:03:41.72,zh - 黄色,,0,0,0,,不同于基于整型的 AList，回想我们洞穴的寓言故事
Dialogue: 0,0:03:41.72,0:03:44.38,en - 白色,,0,0,0,,we did not actually destroy the bird that someone finger shot.
Dialogue: 0,0:03:41.72,0:03:44.38,zh - 黄色,,0,0,0,,实际上并没有摧毁用手指射杀的那只鸟
Dialogue: 0,0:03:44.38,0:03:46.37,en - 白色,,0,0,0,,We didn't actually overwrite things with zeros.
Dialogue: 0,0:03:44.38,0:03:46.37,zh - 黄色,,0,0,0,,实际上并没有用0重写
Dialogue: 0,0:03:46.81,0:03:49.54,en - 白色,,0,0,0,,Now actually we do want to overwrite things.
Dialogue: 0,0:03:46.81,0:03:49.54,zh - 黄色,,0,0,0,,我们确实想重写一些东西
Dialogue: 0,0:03:49.54,0:03:54.00,en - 白色,,0,0,0,,So the difference is we are actually going to say items size minus 1 equals null.
Dialogue: 0,0:03:49.54,0:03:54.00,zh - 黄色,,0,0,0,,不同之处是 items[size - 1] = null
Dialogue: 0,0:03:54.43,0:03:55.77,en - 白色,,0,0,0,,Let's just get that down.
Dialogue: 0,0:03:54.43,0:03:55.77,zh - 黄色,,0,0,0,,把它记下
Dialogue: 0,0:03:56.50,0:04:01.08,en - 白色,,0,0,0,,So after we get the last item, we will say item size minus 1 equals null.
Dialogue: 0,0:03:56.50,0:04:01.08,zh - 黄色,,0,0,0,,在获得最后一项后，items[size - 1] = null
Dialogue: 0,0:04:01.84,0:04:03.39,en - 白色,,0,0,0,,So why are we shooting the bird here?
Dialogue: 0,0:04:01.84,0:04:03.39,zh - 黄色,,0,0,0,,为什么要在这里射鸟呢？
Dialogue: 0,0:04:03.76,0:04:04.70,en - 白色,,0,0,0,,What's going on?
Dialogue: 0,0:04:03.76,0:04:04.70,zh - 黄色,,0,0,0,,到底怎么回事？
Dialogue: 0,0:04:05.26,0:04:11.68,en - 白色,,0,0,0,,Well the issue is imagine here we have an array that happens to hold pictures of loitering signs.
Dialogue: 0,0:04:05.26,0:04:11.68,zh - 黄色,,0,0,0,,想象一下，我们这里有一个数组保存闲逛标志的图片
Dialogue: 0,0:04:11.68,0:04:13.36,en - 白色,,0,0,0,,So in position zero, we have this one.
Dialogue: 0,0:04:11.68,0:04:13.36,zh - 黄色,,0,0,0,,位置0有这个
Dialogue: 0,0:04:13.36,0:04:14.73,en - 白色,,0,0,0,,In position one we have this one.
Dialogue: 0,0:04:13.36,0:04:14.73,zh - 黄色,,0,0,0,,位置1有这个
Dialogue: 0,0:04:14.73,0:04:16.06,en - 白色,,0,0,0,,In position two we have this one.
Dialogue: 0,0:04:14.73,0:04:16.06,zh - 黄色,,0,0,0,,位置2有这个
Dialogue: 0,0:04:16.89,0:04:19.95,en - 白色,,0,0,0,,So remember that Java only destroys unwanted objects,
Dialogue: 0,0:04:16.89,0:04:19.95,zh - 黄色,,0,0,0,,记住 Java 只销毁不需要的对象
Dialogue: 0,0:04:19.95,0:04:23.09,en - 白色,,0,0,0,,only does garbage collections when the last reference has been lost.
Dialogue: 0,0:04:19.95,0:04:23.09,zh - 黄色,,0,0,0,,最后一个引用丢失时才执行垃圾回收
Dialogue: 0,0:04:23.74,0:04:29.49,en - 白色,,0,0,0,,If you keep a bunch of references around to unneeded objects, then that object will persist somewhere in memory.
Dialogue: 0,0:04:23.74,0:04:29.49,zh - 黄色,,0,0,0,,如果保留大量不需要的对象的引用，那么该对象将持久保存在内存中的某个位置
Dialogue: 0,0:04:30.05,0:04:33.57,en - 白色,,0,0,0,,So this image could actually be maybe a megabyte in size.
Dialogue: 0,0:04:30.05,0:04:33.57,zh - 黄色,,0,0,0,,这张图片实际上可能有一兆字节
Dialogue: 0,0:04:33.97,0:04:36.46,en - 白色,,0,0,0,,And because you're keeping the address stored of this object,
Dialogue: 0,0:04:33.97,0:04:36.46,zh - 黄色,,0,0,0,,因为你保存的是这个对象的地址
Dialogue: 0,0:04:36.70,0:04:37.86,en - 白色,,0,0,0,,Java will never delete it.
Dialogue: 0,0:04:36.70,0:04:37.86,zh - 黄色,,0,0,0,,Java 永远不会删除它
Dialogue: 0,0:04:38.42,0:04:39.93,en - 白色,,0,0,0,,So this is considered loitering.
Dialogue: 0,0:04:38.42,0:04:39.93,zh - 黄色,,0,0,0,,这被认为是闲逛
Dialogue: 0,0:04:40.16,0:04:41.80,en - 白色,,0,0,0,,And so by setting this thing to null
Dialogue: 0,0:04:40.16,0:04:41.80,zh - 黄色,,0,0,0,,通过将该值设置为 null
Dialogue: 0,0:04:42.61,0:04:45.44,en - 白色,,0,0,0,,what will happen if we say size equal-- sorry--
Dialogue: 0,0:04:42.61,0:04:45.44,zh - 黄色,,0,0,0,,如果我们说 size 等于...抱歉
Dialogue: 0,0:04:45.44,0:04:50.54,en - 白色,,0,0,0,,if we don't set this to null, when we reduce size to 2, then there's still a link.
Dialogue: 0,0:04:45.44,0:04:50.54,zh - 黄色,,0,0,0,,如果不将其设置为 null，当 size 减少到2时，仍然有一个链接
Dialogue: 0,0:04:50.54,0:04:51.91,en - 白色,,0,0,0,,Look at that. It's horrible.
Dialogue: 0,0:04:50.54,0:04:51.91,zh - 黄色,,0,0,0,,看啊，太可怕了
Dialogue: 0,0:04:51.91,0:04:55.87,en - 白色,,0,0,0,,And so basically we're wasting all this memory storing a reference to the sign image,
Dialogue: 0,0:04:51.91,0:04:55.87,zh - 黄色,,0,0,0,,基本上我们是在浪费内存来存储标志图像的引用
Dialogue: 0,0:04:55.87,0:04:58.06,en - 白色,,0,0,0,,and we just have this Getty Images thing laying around.
Dialogue: 0,0:04:55.87,0:04:58.06,zh - 黄色,,0,0,0,,这张图片就静静躺在那
Dialogue: 0,0:04:58.63,0:05:00.80,en - 白色,,0,0,0,,By contrast, if we null all this out,
Dialogue: 0,0:04:58.63,0:05:00.80,zh - 黄色,,0,0,0,,相反，如果清空了
Dialogue: 0,0:05:01.01,0:05:03.40,en - 白色,,0,0,0,,then that garbage collector would come around and say, you know what.
Dialogue: 0,0:05:01.01,0:05:03.40,zh - 黄色,,0,0,0,,垃圾回收器就会过来
Dialogue: 0,0:05:03.40,0:05:05.40,en - 白色,,0,0,0,,Nobody actually cares about this image anymore.
Dialogue: 0,0:05:03.40,0:05:05.40,zh - 黄色,,0,0,0,,已经没人在关心这张图片了
Dialogue: 0,0:05:05.40,0:05:06.64,en - 白色,,0,0,0,,I may as well destroy it.
Dialogue: 0,0:05:05.40,0:05:06.64,zh - 黄色,,0,0,0,,还不如把它毁了
Dialogue: 0,0:05:07.49,0:05:11.17,en - 白色,,0,0,0,,So it's a very subtle point you might never notice unless you're storing objects,
Dialogue: 0,0:05:07.49,0:05:11.17,zh - 黄色,,0,0,0,,这是很不容易察觉的点，除非你在存储对象
Dialogue: 0,0:05:11.46,0:05:13.67,en - 白色,,0,0,0,,storing an array of really large objects.
Dialogue: 0,0:05:11.46,0:05:13.67,zh - 黄色,,0,0,0,,存储非常大的对象数组
Dialogue: 0,0:05:14.79,0:05:17.58,en - 白色,,0,0,0,,But we do need to do this when we're using generics,
Dialogue: 0,0:05:14.79,0:05:17.58,zh - 黄色,,0,0,0,,使用泛型时确实需要这么做
Dialogue: 0,0:05:17.58,0:05:18.69,en - 白色,,0,0,0,,otherwise we're loitering.
Dialogue: 0,0:05:17.58,0:05:18.69,zh - 黄色,,0,0,0,,否则就是在闲逛
Dialogue: 0,0:05:18.69,0:05:19.40,en - 白色,,0,0,0,,So don't loiter.
Dialogue: 0,0:05:18.69,0:05:19.40,zh - 黄色,,0,0,0,,不要闲逛
Dialogue: 0,0:05:19.83,0:05:21.87,en - 白色,,0,0,0,,And you might really go back to earlier and think,
Dialogue: 0,0:05:19.83,0:05:21.87,zh - 黄色,,0,0,0,,回到早些时候想想
Dialogue: 0,0:05:22.11,0:05:25.27,en - 白色,,0,0,0,,what was special about objects versus just integers.
Dialogue: 0,0:05:22.11,0:05:25.27,zh - 黄色,,0,0,0,,与整数相比，对象的特殊之处在于
Dialogue: 0,0:05:25.27,0:05:26.69,en - 白色,,0,0,0,,Make sure this really makes sense.
Dialogue: 0,0:05:25.27,0:05:26.69,zh - 黄色,,0,0,0,,确保这真的有意义
Dialogue: 0,0:05:26.66,0:05:29.66,翻译人员专属 - 片尾（左上角）,,0,0,0,, 翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:05:26.69,0:05:29.66,en - 白色,,0,0,0,,Because it's a subtle point, but an important one.
Dialogue: 0,0:05:26.69,0:05:29.66,zh - 黄色,,0,0,0,,这点不易察觉，但非常重要
